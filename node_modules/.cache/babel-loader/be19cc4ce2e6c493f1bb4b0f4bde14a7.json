{"ast":null,"code":"var _jsxFileName = \"/home/paulo/Projects_myself/JS/sd-05-recipes-app-11-base/src/Context/Provider.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReceitasContext from './ReceitasContext';\nimport { searchCockTailByName, searchCockTailByLetter, searchCockTailByIngredient } from '../Services/ApiBebida';\nimport { ApiSearchMealByName, ApiSearchByFirstLetter, ApiSearchByMainIngredient } from '../Services/ApiComida';\n\nfunction noElements(arr) {\n  if (!arr) {\n    window.alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    return null;\n  }\n\n  return arr.length === 0 ? window.alert('Sinto muito, não encontramos nenhuma receita para esses filtros.') : null;\n}\n\nexport function filterComidas(title, optionsValue, searchValue, setReceitas, setIsFetching) {\n  if (optionsValue === 'primeiraLetra') {\n    if (searchValue.length !== 1) {\n      window.alert('Sua busca deve conter somente 1 (um) caracter');\n      return null;\n    }\n\n    ApiSearchByFirstLetter(searchValue).then(ListaComidasPelaPrimeiraLetra => {\n      setReceitas(ListaComidasPelaPrimeiraLetra);\n      noElements(ListaComidasPelaPrimeiraLetra);\n    }).then(() => {\n      setIsFetching(true);\n    });\n  } else if (optionsValue === 'ingrediente') {\n    ApiSearchByMainIngredient(searchValue).then(ListaComidasPorIngrediente => {\n      setReceitas(ListaComidasPorIngrediente);\n      noElements(ListaComidasPorIngrediente);\n    }).then(() => {\n      setIsFetching(true);\n    });\n  } else if (optionsValue === 'nome') {\n    ApiSearchMealByName(searchValue).then(ListaComidasPeloNome => {\n      setReceitas(ListaComidasPeloNome);\n      noElements(ListaComidasPeloNome);\n    }).then(() => {\n      setIsFetching(true);\n    });\n  }\n\n  return null;\n}\n\nfunction filterBebidas(title, optionsValue, searchValue, setReceitas, setIsFetching) {\n  if (optionsValue === 'primeiraLetra') {\n    if (searchValue.length !== 1) {\n      window.alert('Sua busca deve conter somente 1 (um) caracter');\n      return null;\n    }\n\n    searchCockTailByLetter(searchValue).then(ListaBebidasPelaPrimeiraLetra => {\n      setReceitas(ListaBebidasPelaPrimeiraLetra);\n      noElements(ListaBebidasPelaPrimeiraLetra);\n    }).then(() => {\n      setIsFetching(true);\n    });\n  } else if (optionsValue === 'ingrediente') {\n    searchCockTailByIngredient(searchValue).then(ListaBebidasPorIngrediente => {\n      setReceitas(ListaBebidasPorIngrediente);\n      noElements(ListaBebidasPorIngrediente);\n    }).then(() => {\n      setIsFetching(true);\n    });\n  } else if (optionsValue === 'nome') {\n    searchCockTailByName(searchValue).then(ListaBebidasPeloNome => {\n      setReceitas(ListaBebidasPeloNome);\n      noElements(ListaBebidasPeloNome);\n    }).then(() => {\n      setIsFetching(true);\n    });\n  }\n\n  return null;\n}\n\nfunction setupRecom(searchValue, setReceitas, setIsFetching, setSugestFood, setSugestDrink) {\n  searchCockTailByName('').then(ListaBebidasPeloNome => {\n    setSugestDrink(ListaBebidasPeloNome.slice(0, 6));\n  }).then(() => {\n    setIsFetching(true);\n  });\n  ApiSearchMealByName('').then(ListaComidasPeloNome => {\n    setSugestFood(ListaComidasPeloNome.slice(0, 6));\n  }).then(() => {\n    setIsFetching(true);\n  });\n}\n\nfunction funcBusca1(tipo, ingrediente, title, setReceitas, setIsFetching) {\n  if (tipo === 'comidas') {\n    filterComidas(title, 'ingrediente', ingrediente, setReceitas, setIsFetching);\n  } else {\n    filterBebidas(title, 'ingrediente', ingrediente, setReceitas, setIsFetching);\n  }\n\n  return null;\n}\n/* const funcBusca = (tipo, ingrediente) => {\n    temp1 = tipo === 'comidas'\n        ? filterComidas(title, 'ingrediente', ingrediente, setReceitas, setIsFetching)\n        : filterBebidas(title, 'ingrediente', ingrediente, setReceitas, setIsFetching);\n  }; */\n\n\nfunction UseFilterOut(title, optionsValue, searchValue, setReceitas, setIsFetching) {\n  if (title === 'comidas') {\n    filterComidas(title, optionsValue, searchValue, setReceitas, setIsFetching);\n  }\n\n  if (title === 'bebidas') {\n    filterBebidas(title, optionsValue, searchValue, setReceitas, setIsFetching);\n  }\n}\n\nexport default function Provider(props) {\n  const [isFetching, setIsFetching] = useState(false);\n  const [receitas, setReceitas] = useState([]);\n  const [optionsValue, setOptionsValue] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [changeFilter, setchangeFilter] = useState(0);\n  const [title, setTitle] = useState('');\n  const [sugestDrink, setSugestDrink] = useState([]);\n  const [sugestFood, setSugestFood] = useState([]);\n  const [redirecionado, setRedirecionado] = useState(false);\n  const [email, setEmail] = useState('');\n\n  const funcBusca = (tipo, ingrediente) => funcBusca1(tipo, ingrediente, title, setReceitas, setIsFetching);\n\n  const state = {\n    isFetching,\n    receitas,\n    optionsValue,\n    searchValue,\n    changeFilter,\n    title,\n    sugestDrink,\n    sugestFood,\n    email,\n    setIsFetching,\n    setReceitas,\n    setOptionsValue,\n    setSearchValue,\n    setchangeFilter,\n    setTitle,\n    setSugestDrink,\n    setSugestFood,\n    setEmail,\n    funcBusca,\n    redirecionado,\n    setRedirecionado\n  };\n  useEffect(() => {\n    setupRecom(searchValue, setReceitas, setIsFetching, setSugestFood, setSugestDrink);\n  }, []);\n  useEffect(() => {\n    UseFilterOut(title, optionsValue, searchValue, setReceitas, setIsFetching);\n  }, [changeFilter]);\n  return /*#__PURE__*/React.createElement(ReceitasContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 10\n    }\n  }, props.children);\n}\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};","map":{"version":3,"sources":["/home/paulo/Projects_myself/JS/sd-05-recipes-app-11-base/src/Context/Provider.jsx"],"names":["React","useState","useEffect","PropTypes","ReceitasContext","searchCockTailByName","searchCockTailByLetter","searchCockTailByIngredient","ApiSearchMealByName","ApiSearchByFirstLetter","ApiSearchByMainIngredient","noElements","arr","window","alert","length","filterComidas","title","optionsValue","searchValue","setReceitas","setIsFetching","then","ListaComidasPelaPrimeiraLetra","ListaComidasPorIngrediente","ListaComidasPeloNome","filterBebidas","ListaBebidasPelaPrimeiraLetra","ListaBebidasPorIngrediente","ListaBebidasPeloNome","setupRecom","setSugestFood","setSugestDrink","slice","funcBusca1","tipo","ingrediente","UseFilterOut","Provider","props","isFetching","receitas","setOptionsValue","setSearchValue","changeFilter","setchangeFilter","setTitle","sugestDrink","sugestFood","redirecionado","setRedirecionado","email","setEmail","funcBusca","state","children","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReceitasContext from './ReceitasContext';\nimport {\n  searchCockTailByName,\n  searchCockTailByLetter,\n  searchCockTailByIngredient,\n} from '../Services/ApiBebida';\nimport {\n  ApiSearchMealByName,\n  ApiSearchByFirstLetter,\n  ApiSearchByMainIngredient,\n} from '../Services/ApiComida';\n\nfunction noElements(arr) {\n  if (!arr) {\n    window.alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    return null;\n  }\n  return arr.length === 0\n    ? window.alert('Sinto muito, não encontramos nenhuma receita para esses filtros.')\n    : null;\n}\n\nexport function filterComidas(title, optionsValue, searchValue, setReceitas, setIsFetching) {\n  if (optionsValue === 'primeiraLetra') {\n    if (searchValue.length !== 1) {\n      window.alert('Sua busca deve conter somente 1 (um) caracter');\n      return null;\n    }\n    ApiSearchByFirstLetter(searchValue)\n      .then((ListaComidasPelaPrimeiraLetra) => {\n        setReceitas(ListaComidasPelaPrimeiraLetra);\n        noElements(ListaComidasPelaPrimeiraLetra);\n      })\n      .then(() => {\n        setIsFetching(true);\n      });\n  } else if (optionsValue === 'ingrediente') {\n    ApiSearchByMainIngredient(searchValue)\n      .then((ListaComidasPorIngrediente) => {\n        setReceitas(ListaComidasPorIngrediente);\n        noElements(ListaComidasPorIngrediente);\n      })\n      .then(() => {\n        setIsFetching(true);\n      });\n  } else if (optionsValue === 'nome') {\n    ApiSearchMealByName(searchValue)\n      .then((ListaComidasPeloNome) => {\n        setReceitas(ListaComidasPeloNome);\n        noElements(ListaComidasPeloNome);\n      })\n      .then(() => {\n        setIsFetching(true);\n      });\n  }\n  return null;\n}\n\nfunction filterBebidas(title, optionsValue, searchValue, setReceitas, setIsFetching) {\n  if (optionsValue === 'primeiraLetra') {\n    if (searchValue.length !== 1) {\n      window.alert('Sua busca deve conter somente 1 (um) caracter');\n      return null;\n    }\n    searchCockTailByLetter(searchValue)\n      .then((ListaBebidasPelaPrimeiraLetra) => {\n        setReceitas(ListaBebidasPelaPrimeiraLetra);\n        noElements(ListaBebidasPelaPrimeiraLetra);\n      })\n      .then(() => {\n        setIsFetching(true);\n      });\n  } else if (optionsValue === 'ingrediente') {\n    searchCockTailByIngredient(searchValue)\n      .then((ListaBebidasPorIngrediente) => {\n        setReceitas(ListaBebidasPorIngrediente);\n        noElements(ListaBebidasPorIngrediente);\n      })\n      .then(() => {\n        setIsFetching(true);\n      });\n  } else if (optionsValue === 'nome') {\n    searchCockTailByName(searchValue)\n      .then((ListaBebidasPeloNome) => {\n        setReceitas(ListaBebidasPeloNome);\n        noElements(ListaBebidasPeloNome);\n      })\n      .then(() => {\n        setIsFetching(true);\n      });\n  }\n  return null;\n}\n\nfunction setupRecom(searchValue, setReceitas, setIsFetching, setSugestFood, setSugestDrink) {\n  searchCockTailByName('')\n    .then((ListaBebidasPeloNome) => {\n      setSugestDrink(ListaBebidasPeloNome.slice(0, 6));\n    })\n    .then(() => {\n      setIsFetching(true);\n    });\n\n  ApiSearchMealByName('')\n    .then((ListaComidasPeloNome) => {\n      setSugestFood(ListaComidasPeloNome.slice(0, 6));\n    })\n    .then(() => {\n      setIsFetching(true);\n    });\n}\n\nfunction funcBusca1(tipo, ingrediente, title, setReceitas, setIsFetching) {\n  if (tipo === 'comidas') {\n    filterComidas(title, 'ingrediente', ingrediente, setReceitas, setIsFetching);\n  } else {\n    filterBebidas(title, 'ingrediente', ingrediente, setReceitas, setIsFetching);\n  }\n  return null;\n}\n/* const funcBusca = (tipo, ingrediente) => {\n    temp1 = tipo === 'comidas'\n        ? filterComidas(title, 'ingrediente', ingrediente, setReceitas, setIsFetching)\n        : filterBebidas(title, 'ingrediente', ingrediente, setReceitas, setIsFetching);\n  }; */\n\nfunction UseFilterOut(title, optionsValue, searchValue, setReceitas, setIsFetching) {\n  if (title === 'comidas') {\n    filterComidas(title, optionsValue, searchValue, setReceitas, setIsFetching);\n  }\n  if (title === 'bebidas') {\n    filterBebidas(title, optionsValue, searchValue, setReceitas, setIsFetching);\n  }\n}\nexport default function Provider(props) {\n  const [isFetching, setIsFetching] = useState(false);\n  const [receitas, setReceitas] = useState([]);\n  const [optionsValue, setOptionsValue] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [changeFilter, setchangeFilter] = useState(0);\n  const [title, setTitle] = useState('');\n  const [sugestDrink, setSugestDrink] = useState([]);\n  const [sugestFood, setSugestFood] = useState([]);\n  const [redirecionado, setRedirecionado] = useState(false);\n  const [email, setEmail] = useState('');\n  const funcBusca = (tipo, ingrediente) =>\n    funcBusca1(tipo, ingrediente, title, setReceitas, setIsFetching);\n  const state = {\n    isFetching,\n    receitas,\n    optionsValue,\n    searchValue,\n    changeFilter,\n    title,\n    sugestDrink,\n    sugestFood,\n    email,\n    setIsFetching,\n    setReceitas,\n    setOptionsValue,\n    setSearchValue,\n    setchangeFilter,\n    setTitle,\n    setSugestDrink,\n    setSugestFood,\n    setEmail,\n    funcBusca,\n    redirecionado,\n    setRedirecionado,\n  };\n  useEffect(() => {\n    setupRecom(searchValue, setReceitas, setIsFetching, setSugestFood, setSugestDrink);\n  }, []);\n  useEffect(() => {\n    UseFilterOut(title, optionsValue, searchValue, setReceitas, setIsFetching);\n  }, [changeFilter]);\n  return <ReceitasContext.Provider value={state}>{props.children}</ReceitasContext.Provider>;\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}