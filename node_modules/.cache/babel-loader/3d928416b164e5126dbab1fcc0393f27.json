{"ast":null,"code":"var _jsxFileName = \"/home/paulo/Projects_myself/JS/sd-05-recipes-app-11-base/src/Components/CardDone.jsx\";\nimport React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport Tags from './tagDone';\nimport HorizontalName from './cards/HorizontalName';\nimport ShareOption from './cards/ShareButton';\nimport ImageTop from './cards/ImageTop'; // HA https://www.codegrepper.com/code-examples/basic/copy+string+to+clipboard+javascript\n\nexport function CopyURL(address) {\n  window.navigator.clipboard.writeText(address);\n}\nexport default function CardDone(props) {\n  const {\n    type,\n    area,\n    category,\n    alcoholicOrNot,\n    doneDate,\n    tags\n  } = props.item;\n  const {\n    index,\n    item\n  } = props;\n  const [copy, setCopy] = useState(false);\n  const isMeal = type === 'comida';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"receitaCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ImageTop, {\n    item: item,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buddyCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, isMeal ? /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, `${area} - ${category}`) : /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, alcoholicOrNot), /*#__PURE__*/React.createElement(HorizontalName, {\n    item: item,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ShareOption, {\n    index: index,\n    copy: copy,\n    item: item,\n    setCopy: setCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feitaCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"feitaCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Feita em: \"), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, doneDate)), isMeal ? tags.map(tagName => /*#__PURE__*/React.createElement(Tags, {\n    tagName: tagName,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 41\n    }\n  })) : null));\n}\nCardDone.propTypes = {\n  index: propTypes.number.isRequired,\n  item: propTypes.instanceOf(Object).isRequired\n};","map":{"version":3,"sources":["/home/paulo/Projects_myself/JS/sd-05-recipes-app-11-base/src/Components/CardDone.jsx"],"names":["React","useState","propTypes","Tags","HorizontalName","ShareOption","ImageTop","CopyURL","address","window","navigator","clipboard","writeText","CardDone","props","type","area","category","alcoholicOrNot","doneDate","tags","item","index","copy","setCopy","isMeal","map","tagName","number","isRequired","instanceOf","Object"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport Tags from './tagDone';\nimport HorizontalName from './cards/HorizontalName';\nimport ShareOption from './cards/ShareButton';\nimport ImageTop from './cards/ImageTop';\n\n// HA https://www.codegrepper.com/code-examples/basic/copy+string+to+clipboard+javascript\nexport function CopyURL(address) {\n  window.navigator.clipboard.writeText(address);\n}\nexport default function CardDone(props) {\n  const { type, area, category, alcoholicOrNot, doneDate, tags } = props.item;\n  const { index, item } = props;\n  const [copy, setCopy] = useState(false);\n  const isMeal = type === 'comida';\n  return (\n    <div className=\"receitaCard\">\n      <ImageTop item={item} index={index} />\n      <div className=\"buddyCard\">\n        <div className=\"textCard\">\n          {isMeal ? (\n            <p data-testid={`${index}-horizontal-top-text`}>{`${area} - ${category}`}</p>\n          ) : (\n            <p data-testid={`${index}-horizontal-top-text`}>{alcoholicOrNot}</p>\n          )}\n          <HorizontalName item={item} index={index} />\n          <ShareOption index={index} copy={copy} item={item} setCopy={setCopy} />\n        </div>\n        <div className=\"feitaCard\">\n          <span className=\"feitaCard\">Feita em: </span>{' '}\n          <span data-testid={`${index}-horizontal-done-date`}>{doneDate}</span>\n        </div>\n        {isMeal ? tags.map((tagName) => <Tags tagName={tagName} index={index} />) : null}\n      </div>\n    </div>\n  );\n}\n\nCardDone.propTypes = {\n  index: propTypes.number.isRequired,\n  item: propTypes.instanceOf(Object).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}