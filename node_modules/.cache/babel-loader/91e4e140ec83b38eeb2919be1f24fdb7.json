{"ast":null,"code":"var _jsxFileName = \"/home/paulo/Projects_myself/JS/sd-05-recipes-app-11-base/src/Pages/TelaLogin.jsx\";\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Logo from '../images/open-baladin-roma.png';\nimport '../CSS/TelaLogin.css'; // HA https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction onclickFuntion(email) {\n  if (!localStorage.getItem('mealsToken')) localStorage.setItem('mealsToken', '1');\n  if (!localStorage.getItem('cocktailsToken')) localStorage.setItem('cocktailsToken', '1');\n  if (!localStorage.getItem('user')) localStorage.setItem('user', JSON.stringify({\n    email\n  }));\n}\n\nexport default function Login() {\n  const [validation, setValidation] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    if (validateEmail(email) && password.length > 6) {\n      setValidation(false);\n    } else {\n      setValidation(true);\n    }\n  }, [email, password]);\n\n  const enterEvent = e => {\n    let key = e.which || e.keyCode;\n    console.log(key);\n\n    if (key === 13 && validation) {\n      onclickFuntion(email);\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/comidas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"TelaLogin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Logo,\n    alt: \"logo\",\n    className: \"loginLogo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"loginText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput\",\n    \"data-testid\": \"email-input\",\n    type: \"email\",\n    placeholder: \"Email\",\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput\",\n    \"data-testid\": \"password-input\",\n    type: \"password\",\n    minLength: \"7\",\n    placeholder: \"Senha\",\n    onChange: e => {\n      setPassword(e.target.value);\n      enterEvent(e);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/comidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"login-submit-btn\",\n    className: \"loginButton\",\n    type: \"button\",\n    onClick: () => onclickFuntion(email),\n    disabled: validation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Entrar\")));\n}","map":{"version":3,"sources":["/home/paulo/Projects_myself/JS/sd-05-recipes-app-11-base/src/Pages/TelaLogin.jsx"],"names":["React","useState","useEffect","Link","Redirect","Logo","validateEmail","email","re","test","String","toLowerCase","onclickFuntion","localStorage","getItem","setItem","JSON","stringify","Login","validation","setValidation","setEmail","password","setPassword","length","enterEvent","e","key","which","keyCode","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Logo from '../images/open-baladin-roma.png';\nimport '../CSS/TelaLogin.css';\n\n// HA https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\nfunction validateEmail(email) {\n  const re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction onclickFuntion(email) {\n  if (!localStorage.getItem('mealsToken')) localStorage.setItem('mealsToken', '1');\n  if (!localStorage.getItem('cocktailsToken')) localStorage.setItem('cocktailsToken', '1');\n  if (!localStorage.getItem('user')) localStorage.setItem('user', JSON.stringify({ email }));\n}\n\nexport default function Login() {\n  const [validation, setValidation] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    if (validateEmail(email) && password.length > 6) {\n      setValidation(false);\n    } else {\n      setValidation(true);\n    }\n  }, [email, password]);\n  const enterEvent = (e) => {\n    let key = e.which || e.keyCode;\n    console.log(key)\n    if (key === 13 && validation) {\n      onclickFuntion(email);\n      return <Redirect to=\"/comidas\" />;\n    }\n  };\n  return (\n    <form className=\"TelaLogin\">\n      <img src={Logo} alt=\"logo\" className=\"loginLogo\" />\n      <h1 className=\"loginText\">Login</h1>\n      <input\n        className=\"loginInput\"\n        data-testid=\"email-input\"\n        type=\"email\"\n        placeholder=\"Email\"\n        onChange={(e) => setEmail(e.target.value)}\n        required\n      />\n      <input\n        className=\"loginInput\"\n        data-testid=\"password-input\"\n        type=\"password\"\n        minLength=\"7\"\n        placeholder=\"Senha\"\n        onChange={(e) => {\n          setPassword(e.target.value);\n          enterEvent(e);\n        }}\n        required\n      />\n      <Link to=\"/comidas\">\n        <button\n          data-testid=\"login-submit-btn\"\n          className=\"loginButton\"\n          type=\"button\"\n          onClick={() => onclickFuntion(email)}\n          disabled={validation}\n        >\n          Entrar\n        </button>\n      </Link>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}